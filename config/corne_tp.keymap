/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define HAS_MOUSE_KEYS
#define HAS_MOUSE_TP

#define DEF 0
#define FNN 1
#define NAV 2

#include "include/mouse_tp.dtsi"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

/ {
    combos {
        compatible = "zmk,combos";

        parentheses_left {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 15>;
            layers = <0>;
        };

        parentheses_right {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
            layers = <0>;
        };

        bracket_left {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
            layers = <0>;
        };

        bracket_right {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 7>;
            layers = <0>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <20 21>;
            layers = <0>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <15 14>;
            layers = <0>;
        };

        brace_left {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <27 28>;
            layers = <0>;
        };

        brace_right {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <31 32>;
            layers = <0>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <2 3>;
            layers = <0>;
        };

        bigger_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <8 9>;
            layers = <0>;
        };

        hyphen {
            bindings = <&kp MINUS>;
            key-positions = <28 31>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <4 7>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <16 19>;
            layers = <0>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <27 26>;
            layers = <0>;
        };

        astrsk {
            bindings = <&kp ASTERISK>;
            key-positions = <3 8>;
            layers = <0>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <15 20>;
            layers = <0>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <32 33>;
            layers = <0>;
        };

        excl {
            bindings = <&kp EXCL>;
            key-positions = <27 32>;
            layers = <0>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <17 18>;
            layers = <0>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <29 30>;
            layers = <0>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <21 22>;
            layers = <0>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <14 13>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E      &kp R     &kp T          &kp Y          &kp U      &kp I      &kp O    &kp P              &kp BSPC
&kp ESC     &kp A  &kp S  &kp D      &kp F     &kp G          &kp H          &kp J      &kp K      &kp L    &lt NAV SEMICOLON  &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C      &kp V     &kp B          &kp N          &kp M      &kp COMMA  &kp DOT  &lt FNN FSLH       &kp RCTRL
                          &kp LMETA  &kp LALT  &lt FNN SPACE  &lt NAV ENTER  &kp LCTRL  &kp RMETA
            >;
        };

        fnn {
            bindings = <
&kp PSCRN  &kp N1        &kp N2         &kp N3          &kp N4  &kp N5  &kp N6      &kp N7    &kp N8      &kp N9      &kp N0        &kp BSPC
&kp F1     &kp F2        &kp F3         &kp F4          &kp F5  &kp F6  &kp F7      &kp F8    &kp F9      &kp F10     &kp F11       &kp F12
&trans     &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE  &trans  &trans  &kp C_PREV  &kp C_PP  &kp C_NEXT  &kp C_MUTE  &kp C_VOL_UP  &kp C_VOL_DN
                                        &trans          &trans  &trans  &trans      &trans    &trans
            >;
        };

        nav {
            bindings = <
&trans       &trans        &trans        &trans        &kp C_BRI_UP  &kp C_BRI_DN  &msc SCRL_UP  &msc SCRL_DOWN  &trans     &trans     &trans    &trans
&trans       &sk LMETA     &sk LALT      &sk LSHIFT    &sk LCTRL     &trans        &kp LEFT      &kp DOWN        &kp UP     &kp RIGHT  &trans    &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans        &kp PG_UP     &kp PG_DN       &kp HOME   &kp END    &kp DEL   &kp INS
                                         &mkp RCLK     &mkp MCLK     &mkp LCLK     &mkp LCLK     &mkp MCLK       &mkp RCLK
            >;
        };
    };
};
