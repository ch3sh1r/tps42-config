/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define HAS_MOUSE_KEYS
#define HAS_MOUSE_TP

#include "include/mouse_tp.dtsi"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

/ {
        combos {
        compatible = "zmk,combos";

        semcol {
            bindings = <&kp SEMI>;
            key-positions = <32 33>;
            timeout-ms = <50>;
            layers = <0>;
        };

        parentheses_left {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 15>;
            layers = <0>;
        };

        parentheses_right {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
            layers = <0>;
        };

        bracket_left {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
            layers = <0>;
        };

        bracket_right {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 7>;
            layers = <0>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <20 21>;
            layers = <0>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <15 14>;
            layers = <0>;
        };

        brace_left {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <27 28>;
            layers = <0>;
        };

        brace_right {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <31 32>;
            layers = <0>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <2 3>;
            layers = <0>;
        };

        bigger_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <8 9>;
            layers = <0>;
        };

        hyphen {
            bindings = <&kp MINUS>;
            key-positions = <28 31>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <4 7>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <16 19>;
            layers = <0>;
        };

        Pipe {
            bindings = <&kp PIPE>;
            key-positions = <27 26>;
            layers = <0>;
        };

        astrsk {
            bindings = <&kp ASTERISK>;
            key-positions = <3 8>;
            layers = <0>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <15 20>;
            layers = <0>;
        };

        excl {
            bindings = <&kp EXCL>;
            key-positions = <27 32>;
            layers = <0>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <17 18>;
            layers = <0>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <29 30>;
            layers = <0>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <21 22>;
            layers = <0>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <14 13>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E          &kp R  &kp T        &kp Y      &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LCTRL       &kp A  &kp S  &kp D          &kp F  &kp G        &kp H      &kp J  &kp K         &kp L    &kp SQT   &kp ESC
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C          &kp V  &kp B        &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                              &kp LEFT_META  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp LEFT_ALT
            >;
        };


        lower_layer {
            bindings = <
&trans  &none              &kp N7  &kp N8  &kp N9  &kp EQUAL  &kp DOLLAR  &none           &kp UP_ARROW    &trans           &trans  &trans
&trans  &kp DOUBLE_QUOTES  &kp N4  &kp N5  &kp N6  &kp PLUS   &none       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none   &none
&trans  &kp N0             &kp N1  &kp N2  &kp N3  &kp DOT    &trans      &trans          &trans          &trans           &trans  &trans
                                   &trans  &trans  &trans     &trans      &trans          &trans
            >;
        };

        mouse_keys_layer {
            bindings = <
&tog 4  &tog 4  &none           &mmv MOVE_UP    &msc SCRL_UP     &msc SCRL_DOWN  &none      &msc SCRL_UP    &mmv MOVE_UP    &none            &tog 4  &tog 4
&trans             &none              &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none           &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none              &trans
&bt BT_CLR         &bt BT_SEL 0       &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3     &none           &none      &none           &msc SCRL_DOWN  &none            &none              &trans
                                                      &mkp MCLK       &mkp LCLK        &mkp RCLK       &mkp MCLK  &mkp LCLK       &mkp RCLK
            >;
        };

        mouse_settings_layer {
            bindings = <
     &tog 4             &tog 4             &none                    U_MSS_TP_S_D             U_MSS_TP_S_I             U_MSS_TP_PT_I                 U_MSS_TP_PT_I            U_MSS_TP_S_D             U_MSS_TP_S_I             &none                    &tog 4              &tog 4
     U_MSS_RESET              U_MSS_RESET              &none                    U_MSS_TP_NI_D            U_MSS_TP_NI_I            U_MSS_TP_PT_D                 U_MSS_TP_PT_D            U_MSS_TP_NI_D            U_MSS_TP_NI_I            &none                    U_MSS_RESET               U_MSS_RESET
     U_MSS_LOG                U_MSS_LOG                &none                    U_MSS_TP_V6_D            U_MSS_TP_V6_I            &none                         &none                    U_MSS_TP_V6_D            U_MSS_TP_V6_I            &none                    U_MSS_LOG                 U_MSS_LOG
                                                                                &trans                   &mkp LCLK                &mkp RCLK                     &none                    &mkp LCLK                &mkp RCLK
            >;
        };
    };
};
