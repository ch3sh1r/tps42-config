#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NUMBER  1
#define FN  2
#define TP  3
  #include "include/mouse_tp.dtsi"
/ {
    combos {
        compatible = "zmk,combos";

        leftParet {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
            layers = <0>;
        };

        rightParet {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
            layers = <0>;
        };

        minusCombo {
            bindings = <&kp MINUS>;
            key-positions = <38 39>;
            layers = <0>;
        };

        capslock {
            bindings = <&caps_word>;
            key-positions = <4 6>;
            layers = <0>;
        };

        printscreen {
            bindings = <&kp LG(LS(N5))>;
            key-positions = <1 2 3>;
            layers = <0>;
            timeout-ms = <40>;
        };
    };

    macros {
        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_0) &kp LA(NUMBER_1) &kp LA(NUMBER_2) &kp LA(N8)>;
            label = "EURO";
        };

        macro_email_q: macro_email_q {
            label = "MACRO_EMAIL_QQ";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp U &kp R &kp I &kp A &kp R &kp I &kp B &kp E &kp I &kp R &kp O &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
&lt 3 ESC  &kp Q  &kp W  &kp E        &kp R        &kp T                &kp Y          &kp U        &kp I      &kp O         &kp P        &kp BACKSPACE
&kp TAB    &kp A  &kp S  &kp D        &kp F        &kp G                &kp H          &kp J        &kp K      &kp L         &kp SEMI     &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C        &kp V        &kp B                &kp N          &kp M        &kp COMMA  &lt 3 PERIOD  &lt 3 SLASH  &kp RSHFT
                         &lt 2 LCTRL  &lt 1 SPACE  &kp RIGHT_COMMAND    &kp BACKSPACE  &lt 1 ENTER  &none
            >;
        };

        number_layer {
            label = "NUMBER";
            bindings = <
&trans  &kp TAB            &kp N7  &kp N8  &kp N9  &kp EQUAL    &kp DOLLAR  &euro           &kp UP_ARROW    &trans           &trans  &trans
&trans  &kp DOUBLE_QUOTES  &kp N4  &kp N5  &kp N6  &kp PLUS     &none       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none   &none
&trans  &kp N0             &kp N1  &kp N2  &kp N3  &kp DOT      &trans      &trans          &trans          &trans           &trans  &trans
                                   &trans  &trans  &trans       &trans      &trans          &none
            >;
        };

        fn_layer {
            label = "FN";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &kp F10  &kp F11  &kp F12  &bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&sys_reset    &none         &kp F7   &kp F8   &kp F9   &out OUT_USB    &out OUT_USB  &none         &none         &none         &none         &sys_reset
&none         &none         &kp F4   &kp F5   &kp F6   &out OUT_BLE    &out OUT_BLE  &none         &none         &none         &none         &none
                                     &kp F1   &kp F2   &kp F3          &none         &none         &none
            >;
        };

        MouseTP_layer {
            label = "TP";
            bindings = <
&none  &none  &none  &none  &none      &macro_email_q    &none      &none      &msc SCRL_UP    &none  &none  &none
&none  &none  &none  &none  &none      &none             &none      &none      &msc SCRL_DOWN  &none  &none  &none
&none  &none  &none  &none  &none      &none             &none      &none      &none           &none  &none  &none
                     &to 0  &mkp LCLK  &mkp RCLK         &mkp RCLK  &mkp LCLK  &none
            >;
        };
    };
};
